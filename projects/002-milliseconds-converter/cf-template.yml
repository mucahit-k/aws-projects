AWSTemplateFormatVersion: 2010-09-09
Description: 'Milliseconds Converter Web application (Python Flask) deployed on AWS Application Load Balancer with Auto Scaling Group'
Parameters:
  EC2InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small

  LinuxAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTP
      VpcId: vpc-0a8eb270
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MillisecondsLoadBalancer
      Subnets: 
        - subnet-b25fbfd4
        - subnet-608d3e2d
        - subnet-7edc3021
        - subnet-ccd5e2f2
        - subnet-83ad088d
        - subnet-5032dc71
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: 3
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5

  AutoScalingServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - us-east-1a
        - us-east-1b
        - us-east-1c
        - us-east-1d
        - us-east-1e
        - us-east-1f 
      LaunchConfigurationName: !Ref WebServerConfig
      DesiredCapacity: 2
      MinSize: 1
      MaxSize: 3
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer
      VPCZoneIdentifier:
        - subnet-b25fbfd4
        - subnet-608d3e2d
        - subnet-7edc3021
        - subnet-ccd5e2f2
        - subnet-83ad088d
        - subnet-5032dc71
      
  WebServerConfig:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref LinuxAmiId
      InstanceType: !Ref EC2InstanceType
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: !Ref WebServerInstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update -y
            yum install python3 -y
            cd ~
            wget "https://raw.githubusercontent.com/mucahit-k/aws-projects/master/001-roman-numerals-converter/app.py"
            mkdir templates && cd templates
            wget "https://raw.githubusercontent.com/mucahit-k/aws-projects/master/001-roman-numerals-converter/templates/index.html"
            wget "https://raw.githubusercontent.com/mucahit-k/aws-projects/master/001-roman-numerals-converter/templates/result.html"
            pip3 install flask
            python3 ~/app.py
      